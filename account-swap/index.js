(function(U,a,u,H,x,$,p){"use strict";const X=function(e){const n=[...e].map(function(i){return i.codePointAt(0)}),t=[];for(const i of n)t.push(String.fromCodePoint(i+(0<i&&i<127?917504:0)).toString());return t.join("")},j=function(e){const n=[...e].map(function(i){return i.codePointAt(0)}),t=[];for(const i of n)t.push(String.fromCodePoint(i-(917504<i&&i<917631?917504:0)).toString());return t.join("")},b="\u{1F43E}";function Q(e){return e.startsWith(b)}function V(e){return Q(e)?j(e.slice(b.length)):null}function z(e){return b+X(e)}function y(e){return z(JSON.stringify(e))}function Z(e){const n=V(e);if(!n)return null;try{return JSON.parse(n)}catch{return null}}u.findByProps("sendMessage","deleteMessage");const f=new Map,E=new Map,d=function(e){const n=f.get(e);n?.timeout&&clearTimeout(n.timeout),f.delete(e)},C=function(e){const n=E.get(e);n?.timeout&&clearTimeout(n.timeout),E.delete(e)},J=function(){f.forEach(function(e){e.timeout&&clearTimeout(e.timeout)}),E.forEach(function(e){e.timeout&&clearTimeout(e.timeout)}),f.clear(),E.clear()},g=function(e,n){return new Promise(function(t){$.showConfirmationAlert({title:e,content:n,confirmText:"Yes, I'm sure",cancelText:"Cancel",onConfirm:function(){return t(!0)},onCancel:function(){return t(!1)}})})},N=function(e){return e.guild||e.channel.rawRecipients.length!==1?($.showConfirmationAlert({title:"Command Unavailable",content:"This command can only be used in a private DM with one other person.",confirmText:"Okay",onConfirm:function(){}}),null):e.channel.rawRecipients[0]},{sendBotMessage:T}=u.findByProps("sendBotMessage"),{deleteMessage:D}=u.findByProps("sendMessage","deleteMessage");u.findByProps("getToken");async function W(e,n,t,i){try{if(!t||t.length<50){T(e,"\u274C **Possession Failed**: Invalid or corrupted token received.");return}const o=(await Promise.allSettled(i.map(function(s){return D(e,s)}))).filter(function(s){return s.status==="rejected"}).length;o>0&&console.warn(`Failed to delete ${o} possession messages`),await new Promise(function(s){return setTimeout(s,1e3)});try{const s=u.findByProps("login","logout","switchAccountToken");if(!s||!s.switchAccountToken)throw new Error("Authentication module not found or invalid");s.switchAccountToken(t)}catch(s){console.error("Token switch failed:",s),T(e,"\u274C **Possession Failed**: Unable to switch accounts. The token may be invalid or expired.");return}}catch(o){console.error("Failed during possession:",o),T(e,`\u274C **Possession Failed**: ${o.message||"Unknown error occurred"}. You may need to log in manually.`)}finally{C(n)}}async function q(e,n,t){if(!t?.newToken){console.error("Swap Error: Cannot finalize swap, new token is missing."),T(e,"\u274C **Swap Failed**: Critical error - missing token data. No action was taken."),d(n);return}try{if(t.newToken.length<50){T(e,"\u274C **Swap Failed**: Invalid or corrupted token received."),d(n);return}const i=(await Promise.allSettled(t.relevantMessages.map(function(o){return D(e,o)}))).filter(function(o){return o.status==="rejected"}).length;i>0&&(console.warn(`Failed to delete ${i} swap messages`),T(e,"\u26A0\uFE0F **Warning**: Some messages couldn't be cleaned up, but swap will continue.")),await new Promise(function(o){return setTimeout(o,1e3)});try{const o=u.findByProps("login","logout","switchAccountToken");if(!o||!o.switchAccountToken)throw new Error("Authentication module not found or invalid");o.switchAccountToken(t.newToken)}catch(o){console.error("Token switch failed:",o),T(e,"\u274C **Swap Failed**: Unable to switch accounts. The token may be invalid or expired.");return}}catch(i){console.error("Failed during final swap stage:",i),T(e,`\u274C **Swap Failed**: ${i.message||"Unknown error occurred"}. You may need to log in manually.`)}finally{d(n)}}const{sendMessage:I,deleteMessage:h}=u.findByProps("sendMessage","deleteMessage"),{sendBotMessage:c}=u.findByProps("sendBotMessage"),K=u.findByStoreName("UserStore"),{getToken:O}=u.findByProps("getToken");function ee(){return x.before("dispatch",H.FluxDispatcher,function(e){const[n]=e;if(n?.type!=="MESSAGE_CREATE"||!n?.message?.content||n.message.author.id===K.getCurrentUser()?.id)return;const{message:t}=n,i=Z(t.content);if(!(!i?.$?.startsWith("SWAP_")&&!i?.$?.startsWith("POSSESS_")))return async function(){const{author:o,channel_id:s}=t,l=f.get(o.id),P=E.get(o.id);switch(i.$){case"SWAP_REQUEST":if(l)return;try{const r=a.storage.whitelist.includes(o.id),F=a.storage.acceptFromEveryone;let A=!1;if(F||r?A=!0:A=await g(`Accept swap from ${o.username}?`,"This will send your account token to the other user. Only proceed if you trust this person implicitly."),!A){const{body:{id:L}}=await I(s,{content:y({$:"SWAP_CANCEL"})});setTimeout(function(){return h(s,L).catch(function(){})},2e3),setTimeout(function(){return h(s,t.id).catch(function(){})},2e3);return}const M=O();if(!M){c(s,"\u274C **Swap Failed**: Unable to retrieve your account token. Please try reloading Discord.");return}const{body:{id:R}}=await I(s,{content:y({$:"SWAP_RESPONSE",token:M})});f.set(o.id,{iStartedIt:!1,relevantMessages:[t.id,R]})}catch(r){console.error("Error handling SWAP_REQUEST:",r),c(s,`\u274C **Swap Request Failed**: ${r.message||"Unknown error occurred"}.`)}break;case"SWAP_RESPONSE":if(!l||!l.iStartedIt||!i.token)return;try{if(i.token.length<50){c(s,"\u274C **Swap Failed**: Received invalid token from other user."),d(o.id);return}l.newToken=i.token,l.relevantMessages.push(t.id);const r=O();if(!r){c(s,"\u274C **Swap Failed**: Unable to retrieve your account token. Please try reloading Discord."),d(o.id);return}const{body:{id:F}}=await I(s,{content:y({$:"SWAP_FINALIZE",token:r})});l.relevantMessages.push(F),await q(s,o.id,l)}catch(r){console.error("Error handling SWAP_RESPONSE:",r),c(s,`\u274C **Swap Response Failed**: ${r.message||"Unknown error occurred"}.`),d(o.id)}break;case"SWAP_FINALIZE":if(!l||l.iStartedIt||!i.token)return;try{if(i.token.length<50){c(s,"\u274C **Swap Failed**: Received invalid token from other user."),d(o.id);return}l.newToken=i.token,l.relevantMessages.push(t.id),await q(s,o.id,l)}catch(r){console.error("Error handling SWAP_FINALIZE:",r),c(s,`\u274C **Swap Finalization Failed**: ${r.message||"Unknown error occurred"}.`),d(o.id)}break;case"SWAP_CANCEL":if(!l)return;try{await Promise.allSettled([...l.relevantMessages.map(function(r){return h(s,r)}),h(s,t.id)]),c(s,`<@${o.id}> cancelled the swap request.`),d(o.id)}catch(r){console.error("Error handling SWAP_CANCEL:",r),c(s,"\u26A0\uFE0F **Cleanup Warning**: Swap was cancelled but some messages couldn't be deleted."),d(o.id)}break;case"POSSESS_INVITE":if(!i.token)return;try{if(i.token.length<50){c(s,"\u274C **Possession Failed**: Received invalid token from inviter.");return}await W(s,o.id,i.token,[t.id]),c(s,`<@${o.id}> invited you to possess their account. Switching now...`)}catch(r){console.error("Error handling POSSESS_INVITE:",r),c(s,`\u274C **Possession Invite Failed**: ${r.message||"Unknown error occurred"}.`)}break;case"POSSESS_REQUEST":if(P)return;try{const r=a.storage.whitelist.includes(o.id),F=a.storage.acceptFromEveryone;let A=!1;if(F||r?A=!0:A=await g(`Allow ${o.username} to possess your account?`,"This will give them full access to your Discord account. Only proceed if you trust this person completely."),!A){const{body:{id:L}}=await I(s,{content:y({$:"POSSESS_CANCEL"})});setTimeout(function(){return h(s,L).catch(function(){})},2e3),setTimeout(function(){return h(s,t.id).catch(function(){})},2e3);return}const M=O();if(!M){c(s,"\u274C **Possession Request Failed**: Unable to retrieve your account token. Please try reloading Discord.");return}const{body:{id:R}}=await I(s,{content:y({$:"POSSESS_ACCEPT",token:M})});setTimeout(async function(){await Promise.allSettled([h(s,t.id),h(s,R)])},1e3)}catch(r){console.error("Error handling POSSESS_REQUEST:",r),c(s,`\u274C **Possession Request Failed**: ${r.message||"Unknown error occurred"}.`)}break;case"POSSESS_ACCEPT":if(!P||P.type!=="request"||!i.token)return;try{if(i.token.length<50){c(s,"\u274C **Possession Failed**: Received invalid token from other user."),C(o.id);return}await W(s,o.id,i.token,[...P.relevantMessages,t.id]),c(s,`<@${o.id}> granted you access to their account. Switching now...`)}catch(r){console.error("Error handling POSSESS_ACCEPT:",r),c(s,`\u274C **Possession Accept Failed**: ${r.message||"Unknown error occurred"}.`),C(o.id)}break;case"POSSESS_CANCEL":if(!P)return;try{await Promise.allSettled([...P.relevantMessages.map(function(r){return h(s,r)}),h(s,t.id)]),c(s,`<@${o.id}> cancelled the possession request.`),C(o.id)}catch(r){console.error("Error handling POSSESS_CANCEL:",r),c(s,"\u26A0\uFE0F **Cleanup Warning**: Possession was cancelled but some messages couldn't be deleted."),C(o.id)}break}}().catch(function(o){return console.error("Swap Plugin Error:",o)}),e})}var m=function(e){return e[e.BUILT_IN=0]="BUILT_IN",e[e.BUILT_IN_TEXT=1]="BUILT_IN_TEXT",e[e.BUILT_IN_INTEGRATION=2]="BUILT_IN_INTEGRATION",e[e.BOT=3]="BOT",e[e.PLACEHOLDER=4]="PLACEHOLDER",e}({});(function(e){return e[e.SUB_COMMAND=1]="SUB_COMMAND",e[e.SUB_COMMAND_GROUP=2]="SUB_COMMAND_GROUP",e[e.STRING=3]="STRING",e[e.INTEGER=4]="INTEGER",e[e.BOOLEAN=5]="BOOLEAN",e[e.USER=6]="USER",e[e.CHANNEL=7]="CHANNEL",e[e.ROLE=8]="ROLE",e[e.MENTIONABLE=9]="MENTIONABLE",e[e.NUMBER=10]="NUMBER",e[e.ATTACHMENT=11]="ATTACHMENT",e})({});var w=function(e){return e[e.CHAT=1]="CHAT",e[e.USER=2]="USER",e[e.MESSAGE=3]="MESSAGE",e}({});const{sendMessage:te,deleteMessage:ne}=u.findByProps("sendMessage","deleteMessage"),{sendBotMessage:_}=u.findByProps("sendBotMessage"),{getToken:oe}=u.findByProps("getToken");function se(){return p.registerCommand({name:"swap",displayName:"swap",description:"Initiate an account swap with the other user.",displayDescription:"Initiate an account swap with the other user.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],async execute(e,n){try{const t=N(n);if(!t)return;if(f.has(t.id))return _(n.channel.id,"You already have a pending swap with this user.");if(!await g("Initiate Account Swap?","This will start the swap process. Your account may be at risk if the other user is not trustworthy."))return;if(!oe())return _(n.channel.id,"\u274C **Swap Failed**: Unable to retrieve your account token. Please try reloading Discord.");const{body:{id:i}}=await te(n.channel.id,{content:y({$:"SWAP_REQUEST"})}),o={iStartedIt:!0,relevantMessages:[i],timeout:setTimeout(async function(){await ne(n.channel.id,i).catch(function(){}),_(n.channel.id,"Swap request timed out after 30 seconds."),d(t.id)},3e4)};f.set(t.id,o)}catch(t){console.error("Error in swap command:",t),_(n.channel.id,`\u274C **Swap Command Failed**: ${t.message||"Unknown error occurred"}.`)}}})}const{sendBotMessage:S}=u.findByProps("sendBotMessage");function ie(){return p.registerCommand({name:"swap-whitelist-add",displayName:"swap-whitelist-add",description:"Add a user to the swap whitelist.",displayDescription:"Add a user to the swap whitelist.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){try{const t=N(n);if(!t)return;a.storage.whitelist.includes(t.id)?S(n.channel.id,`<@${t.id}> is already whitelisted.`):(a.storage.whitelist.push(t.id),S(n.channel.id,`Added <@${t.id}> to the whitelist! You will no longer see swap confirmation prompts from them.`))}catch(t){console.error("Error in whitelist-add command:",t),S(n.channel.id,`\u274C **Whitelist Add Failed**: ${t.message||"Unknown error occurred"}.`)}}})}function re(){return p.registerCommand({name:"swap-whitelist-remove",displayName:"swap-whitelist-remove",description:"Remove a user from the swap whitelist.",displayDescription:"Remove a user from the swap whitelist.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){const t=N(n);t&&(a.storage.whitelist.includes(t.id)?(a.storage.whitelist=a.storage.whitelist.filter(function(i){return i!==t.id}),S(n.channel.id,`Removed <@${t.id}> from the whitelist.`)):S(n.channel.id,`<@${t.id}> is not in the whitelist.`))}})}function ae(){return p.registerCommand({name:"swap-whitelist-list",displayName:"swap-whitelist-list",description:"List all whitelisted users.",displayDescription:"List all whitelisted users.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){if(a.storage.whitelist.length===0)S(n.channel.id,"No users are currently whitelisted.");else{const t=a.storage.whitelist.map(function(i){return`<@${i}>`}).join(", ");S(n.channel.id,`Whitelisted users: ${t}`)}}})}function ce(){return p.registerCommand({name:"swap-whitelist-clear",displayName:"swap-whitelist-clear",description:"Clears the swap whitelist.",displayDescription:"Clears the swap whitelist.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){a.storage.whitelist=[],S(n.channel.id,"Whitelist cleared!")}})}const{sendMessage:Y,deleteMessage:G}=u.findByProps("sendMessage","deleteMessage"),{sendBotMessage:v}=u.findByProps("sendBotMessage"),{getToken:ue}=u.findByProps("getToken");function le(){return p.registerCommand({name:"possess-invite",displayName:"possess-invite",description:"Invite someone to possess your account (gives them your token).",displayDescription:"Invite someone to possess your account (gives them your token).",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],async execute(e,n){try{const t=N(n);if(!t||!await g("\u26A0\uFE0F Invite Account Possession?",`This will immediately give ${t.username} full access to your Discord account. They will be able to do anything as you. Only proceed if you completely trust this person.`)||!await g("\u26A0\uFE0F FINAL CONFIRMATION \u26A0\uFE0F","This action cannot be undone easily. Once you send your token, the other person will have complete control of your account. Are you absolutely certain?"))return;const i=ue();if(!i)return v(n.channel.id,"\u274C **Possession Invite Failed**: Unable to retrieve your account token. Please try reloading Discord.");const{body:{id:o}}=await Y(n.channel.id,{content:y({$:"POSSESS_INVITE",token:i})});setTimeout(function(){return G(n.channel.id,o).catch(function(){})},2e3),v(n.channel.id,`Possession invite sent to <@${t.id}>. They now have access to your account.`)}catch(t){console.error("Error in possess-invite command:",t),v(n.channel.id,`\u274C **Possession Invite Failed**: ${t.message||"Unknown error occurred"}.`)}}})}function de(){return p.registerCommand({name:"possess-request",displayName:"possess-request",description:"Request to possess someone else's account.",displayDescription:"Request to possess someone else's account.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],async execute(e,n){try{const t=N(n);if(!t)return;if(E.has(t.id))return v(n.channel.id,"You already have a pending possession request with this user.");if(!await g("Request Account Possession?",`This will ask ${t.username} to give you access to their Discord account. Only make this request if they have agreed to it.`))return;const{body:{id:i}}=await Y(n.channel.id,{content:y({$:"POSSESS_REQUEST"})}),o={type:"request",relevantMessages:[i],timeout:setTimeout(async function(){await G(n.channel.id,i).catch(function(){}),v(n.channel.id,"Possession request timed out after 30 seconds."),C(t.id)},3e4)};E.set(t.id,o)}catch(t){console.error("Error in possess-request command:",t),v(n.channel.id,`\u274C **Possession Request Failed**: ${t.message||"Unknown error occurred"}.`)}}})}const{sendBotMessage:k}=u.findByProps("sendBotMessage");function pe(){return p.registerCommand({name:"swap-accept-everyone-enable",displayName:"swap-accept-everyone-enable",description:"\u26A0\uFE0F DANGEROUS: Automatically accept swaps from ANYONE without confirmation.",displayDescription:"\u26A0\uFE0F DANGEROUS: Automatically accept swaps from ANYONE without confirmation.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],async execute(e,n){if(a.storage.acceptFromEveryone){k(n.channel.id,"Auto-accept from everyone is already enabled.");return}!await g("\u26A0\uFE0F EXTREMELY DANGEROUS \u26A0\uFE0F","This will automatically accept ALL swap requests from ANYONE without any confirmation. Your account will be at EXTREME RISK. Only enable this if you understand the consequences and trust everyone who might send you swap requests. Are you absolutely sure?")||!await g("\u26A0\uFE0F FINAL WARNING \u26A0\uFE0F","This is your last chance to back out. Enabling this feature means ANYONE can swap accounts with you instantly. Your Discord account could be stolen or compromised. Are you 100% certain you want to proceed?")||(a.storage.acceptFromEveryone=!0,k(n.channel.id,"\u26A0\uFE0F **DANGER MODE ENABLED** \u26A0\uFE0F\nYou will now automatically accept swap requests from EVERYONE. Use `/swap-accept-everyone-disable` to turn this off."))}})}function he(){return p.registerCommand({name:"swap-accept-everyone-disable",displayName:"swap-accept-everyone-disable",description:"Disable automatically accepting swaps from everyone.",displayDescription:"Disable automatically accepting swaps from everyone.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){if(!a.storage.acceptFromEveryone){k(n.channel.id,"Auto-accept from everyone is already disabled.");return}a.storage.acceptFromEveryone=!1,k(n.channel.id,`\u2705 **DANGER MODE DISABLED**
You will now receive confirmation prompts for swap requests (except from whitelisted users).`)}})}function me(){return p.registerCommand({name:"swap-accept-everyone-status",displayName:"swap-accept-everyone-status",description:"Check if auto-accept from everyone is enabled.",displayDescription:"Check if auto-accept from everyone is enabled.",type:w.CHAT,inputType:m.BUILT_IN_TEXT,applicationId:"-1",options:[],execute(e,n){const t=a.storage.acceptFromEveryone?"\u26A0\uFE0F **ENABLED** - You are automatically accepting swaps from EVERYONE!":"\u2705 **DISABLED** - You will receive confirmation prompts for swap requests.";k(n.channel.id,`Auto-accept from everyone: ${t}`)}})}function we(){return[se(),ie(),re(),ae(),ce(),le(),de(),pe(),he(),me()]}const B=[];function ye(){a.storage.whitelist??=[],a.storage.acceptFromEveryone??=!1,B.push(ee()),B.push(...we())}function fe(){B.forEach(function(e){return e()}),B.length=0,J()}var ge={onUnload:fe,onLoad:ye};return U.default=ge,Object.defineProperty(U,"__esModule",{value:!0}),U})({},vendetta.plugin,vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.ui.alerts,vendetta.commands);
